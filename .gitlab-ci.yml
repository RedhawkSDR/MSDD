variables:
  test_suite: test_$CI_PROJECT_NAME.py
  other_repos: $yum_repo_url/redhawk/$redhawk_version/$dist/$arch
  namespace: rh.

.package: &package
  image: ${docker_registry}utils/docker:latest-rpm
  stage: build
  tags:
    - dind
  script:
    - docker pull ${docker_registry}rpmbuild:$dist-$arch-onbuild
    - printf "FROM ${docker_registry}rpmbuild:$dist-$arch-onbuild" > Dockerfile
    - name=$(echo $CI_PROJECT_NAME| tr '[:upper:]' '[:lower:]')
    - docker build -t $name:latest-$dist-$arch --build-arg "project=$CI_PROJECT_NAME"
                                               --build-arg "rpm_release=$rpm_release"
                                               --build-arg "spec_file=${namespace}$CI_PROJECT_NAME.spec"
                                               --build-arg "arch=$arch"
                                               --build-arg "other_repos=$other_repos" .
    - id=$(docker create $name:latest-$dist-$arch)
    - docker cp $id:/root/rpmbuild/RPMS/ output/
    - docker rm -f $id
  artifacts:
    paths:
      - output/*/*.rpm
    expire_in: 2 days

.test: &test
  image: ${docker_registry}redhawk/redhawk:$redhawk_version-$dist-$arch
  stage: test
  dependencies: []
  script:
    - . /usr/local/redhawk/python-virtualenv/bin/activate
    - yum-builddep -y ${namespace}$CI_PROJECT_NAME.spec
    - if [ -d cpp ] && [ "${dist}" == "el7" ]; then
        export CXXFLAGS='-g -Og -fprofile-arcs -ftest-coverage' V=1;
      fi
    - ./build.sh
    - cd tests
    - env | tee -a ../$CI_PROJECT_NAME-$CI_COMMIT_SHA-tests.log
    - pip list | tee -a ../$CI_PROJECT_NAME-$CI_COMMIT_SHA-tests.log
    - python $test_suite 2>&1 | tee -a ../$CI_PROJECT_NAME-$CI_COMMIT_SHA-tests.log
    - cd ..
    - if [ -d cpp ]; then
        gcovr -r . --xml --exclude-directories=tests > gcovr.xml;
        cppcheck --enable=all --xml-version=2 -i tests . 2> cppcheck-results.xml;
      fi
    - find * -name '*.cpp' -o -name '*.h' -o -name '*.xml' -o -name '*.py' -o -name '*.java' -o -name '*.log' | tar czvf $CI_PROJECT_DIR/output.tar.gz --files-from -
  artifacts:
    paths:
      - $CI_PROJECT_DIR/output.tar.gz
    expire_in: 2 days

package:ci:el6:rh2.1:
  variables:
    rpm_release: 0.$CI_PIPELINE_ID.rh2.1
    dist: el6
    arch: x86_64
    redhawk_version: 2.1-nightly
  <<: *package
  only:
    - branches

package:release:el6:rh2.1:
  variables:
    dist: el6
    arch: x86_64
    redhawk_version: 2.1.0
  before_script:
    - rpm_release="`rpmspec -q --queryformat=\"%{RELEASE}\" ${namespace}$CI_PROJECT_NAME.spec |awk -F. '{print $1}'`.rh2.1"
  <<: *package
  only:
    - tags

package:ci:el6-i386:rh2.1:
  variables:
    rpm_release: 0.$CI_PIPELINE_ID.rh2.1
    dist: el6
    arch: i686
    redhawk_version: 2.1-nightly
  <<: *package
  only:
    - branches

package:release:el6-i386:rh2.1:
  variables:
    dist: el6
    arch: i686
    redhawk_version: 2.1.0
  before_script:
    - rpm_release="`rpmspec -q --queryformat=\"%{RELEASE}\" ${namespace}$CI_PROJECT_NAME.spec |awk -F. '{print $1}'`.rh2.1"
  <<: *package
  only:
    - tags

package:ci:el7:rh2.1:
  variables:
    rpm_release: 0.$CI_PIPELINE_ID.rh2.1
    dist: el7
    arch: x86_64
    redhawk_version: 2.1-nightly
  <<: *package
  only:
    - branches

package:release:el7:rh2.1:
  variables:
    dist: el7
    arch: x86_64
    redhawk_version: 2.1.0
  before_script:
    - rpm_release="`rpmspec -q --queryformat=\"%{RELEASE}\" ${namespace}$CI_PROJECT_NAME.spec |awk -F. '{print $1}'`.rh2.1"
  <<: *package
  only:
    - tags

#test:ci:el6:rh2.1:
#  variables:
#    dist: el6
#    arch: x86_64
#    redhawk_version: 2.1-nightly
#  <<: *test
#  only:
#    - branches

#test:release:el6:rh2.1:
#  variables:
#    dist: el6
#    arch: x86_64
#    redhawk_version: 2.1.0
#  <<: *test
#  only:
#    - tags

#test:ci:el6-i386:rh2.1:
#  variables:
#    dist: el6
#    arch: i686
#    redhawk_version: 2.1-nightly
#  <<: *test
#  only:
#    - branches

#test:release:el6-i386:rh2.1:
#  variables:
#    dist: el6
#    arch: i686
#    redhawk_version: 2.1.0
#  <<: *test
#  only:
#    - tags

#test:ci:el7:rh2.1:
#  variables:
#    dist: el7
#    arch: x86_64
#    redhawk_version: 2.1-nightly
#  <<: *test
#  only:
#    - branches

#test:release:el7:rh2.1:
#  variables:
#    dist: el7
#    arch: x86_64
#    redhawk_version: 2.1.0
#  <<: *test
#  only:
#    - tags

deploy:
  image: centos:7
  stage: deploy
  dependencies: []
  script:
    - if [ -n "$jenkins_url" ]; then
        curl --insecure -X POST $jenkins_url/job/$CI_PROJECT_NAMESPACE/job/$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME/buildWithParameters?pipeline_id=$CI_PIPELINE_ID --user $jenkins_user:$jenkins_api_token;
      fi
